{
    "sourceFile": "components/project.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1693303300563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1693303355416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n     try {\r\n       let response = await GetTaskApi();\r\n       let projectRes =await GetProjectsApi()\r\n       setTaskList(response.tasks);\r\n-      console.log(projectRes.projects)\r\n+      setProjectList(projectRes.projects)\r\n     } catch (err) {\r\n       console.log(err);\r\n     }\r\n   };\r\n@@ -29,9 +29,9 @@\n           <TouchableOpacity style={styles.addButton}>\r\n             <Text style={styles.buttonText}>Add New Task</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n-        {(projectRes.projects || []).map((item,index) => {\r\n+        {(projectList || []).map((item,index) => {\r\n           return <ProjectBox projectData={item} taskData={taskList} key={index}/>;\r\n         })}\r\n       </View>\r\n     </View>\r\n"
                },
                {
                    "date": 1693304118578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,24 +2,21 @@\n import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n import { GetTaskApi ,GetProjectsApi } from \"./Api/api\";\r\n import ProjectBox from \"./projectBox\";\r\n const Task = () => {\r\n-  const [taskList, setTaskList] = useState([]);\r\n   const [projectList, setProjectList] = useState([]);\r\n   /*Function to get the task list */\r\n-  const GetTaskList = async () => {\r\n+  const GetProjectList = async () => {\r\n     try {\r\n-      let response = await GetTaskApi();\r\n       let projectRes =await GetProjectsApi()\r\n-      setTaskList(response.tasks);\r\n       setProjectList(projectRes.projects)\r\n     } catch (err) {\r\n       console.log(err);\r\n     }\r\n   };\r\n   /*Render function */\r\n   useEffect(() => {\r\n-    GetTaskList();\r\n+    GetProjectList();\r\n   }, []);\r\n \r\n   return (\r\n     <View style={styles.contentBody}>\r\n@@ -30,9 +27,9 @@\n             <Text style={styles.buttonText}>Add New Task</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n         {(projectList || []).map((item,index) => {\r\n-          return <ProjectBox projectData={item} taskData={taskList} key={index}/>;\r\n+          return <ProjectBox projectData={item} key={index}/>;\r\n         })}\r\n       </View>\r\n     </View>\r\n   );\r\n"
                },
                {
                    "date": 1693304193817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n-import { GetTaskApi ,GetProjectsApi } from \"./Api/api\";\r\n+import { GetTaskApi, GetProjectsApi } from \"./Api/api\";\r\n import ProjectBox from \"./projectBox\";\r\n const Task = () => {\r\n   const [projectList, setProjectList] = useState([]);\r\n   /*Function to get the task list */\r\n   const GetProjectList = async () => {\r\n     try {\r\n-      let projectRes =await GetProjectsApi()\r\n-      setProjectList(projectRes.projects)\r\n+      let projectRes = await GetProjectsApi();\r\n+      setProjectList(projectRes.projects);\r\n     } catch (err) {\r\n       console.log(err);\r\n     }\r\n   };\r\n@@ -26,10 +26,10 @@\n           <TouchableOpacity style={styles.addButton}>\r\n             <Text style={styles.buttonText}>Add New Task</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n-        {(projectList || []).map((item,index) => {\r\n-          return <ProjectBox projectData={item} key={index}/>;\r\n+        {(projectList || []).map((item, index) => {\r\n+          return <ProjectBox projectData={item} key={index} />;\r\n         })}\r\n       </View>\r\n     </View>\r\n   );\r\n"
                },
                {
                    "date": 1693306160584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n   return (\r\n     <View style={styles.contentBody}>\r\n       <View style={styles.container}>\r\n         <View style={styles.textHead}>\r\n-          <Text style={styles.heading}>Task Management</Text>\r\n+          <Text style={styles.heading}>Project Management</Text>\r\n           <TouchableOpacity style={styles.addButton}>\r\n-            <Text style={styles.buttonText}>Add New Task</Text>\r\n+            <Text style={styles.buttonText}>Add Project</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n         {(projectList || []).map((item, index) => {\r\n           return <ProjectBox projectData={item} key={index} />;\r\n"
                },
                {
                    "date": 1693306263574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import React, { useState, useEffect } from \"react\";\r\n+import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n+import { GetProjectsApi } from \"./Api/api\";\r\n+import ProjectBox from \"./projectBox\";\r\n+const Task = () => {\r\n+  const [projectList, setProjectList] = useState([]);\r\n+  const [addProjectModal, setAddProjectList] = useState(false);\r\n+  /*Function to get the task list */\r\n+  const GetProjectList = async () => {\r\n+    try {\r\n+      let projectRes = await GetProjectsApi();\r\n+      setProjectList(projectRes.projects);\r\n+    } catch (err) {\r\n+      console.log(err);\r\n+    }\r\n+  };\r\n+  /*Render function */\r\n+  useEffect(() => {\r\n+    GetProjectList();\r\n+  }, []);\r\n+\r\n+  /*Function to open modal for add project */\r\n+  const OnAddProjectClick = async ()=>{\r\n+    setAddProjectList(true)\r\n+  }\r\n+  return (\r\n+    <View style={styles.contentBody}>\r\n+      <View style={styles.container}>\r\n+        <View style={styles.textHead}>\r\n+          <Text style={styles.heading}>Project Management</Text>\r\n+          <TouchableOpacity style={styles.addButton} onPress={OnAddProjectClick}>\r\n+            <Text style={styles.buttonText}>Add Project</Text>\r\n+          </TouchableOpacity>\r\n+        </View>\r\n+        {(projectList || []).map((item, index) => {\r\n+          return <ProjectBox projectData={item} key={index} />;\r\n+        })}\r\n+      </View>\r\n+    </View>\r\n+  );\r\n+};\r\n+\r\n+const styles = StyleSheet.create({\r\n+  contentBody: {\r\n+    flex: 1,\r\n+    padding: 10,\r\n+  },\r\n+  container: {\r\n+    flex: 1,\r\n+  },\r\n+  textHead: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    marginBottom: 15,\r\n+  },\r\n+  heading: {\r\n+    fontSize: 20,\r\n+    fontWeight: \"bold\",\r\n+    flex: 1,\r\n+  },\r\n+  addButton: {\r\n+    backgroundColor: \"#e45e38\",\r\n+    paddingVertical: 10,\r\n+    paddingHorizontal: 15,\r\n+    borderRadius: 8,\r\n+  },\r\n+  buttonText: {\r\n+    color: \"white\",\r\n+    fontSize: 16,\r\n+  },\r\n+});\r\n+\r\n+export default Task;\r\n"
                },
                {
                    "date": 1693306310234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,26 +18,26 @@\n   useEffect(() => {\r\n     GetProjectList();\r\n   }, []);\r\n \r\n-  /*Function to open modal for add project */\r\n-  const OnAddProjectClick = async ()=>{\r\n-    setAddProjectList(true)\r\n-  }\r\n+ \r\n   return (\r\n+    <>\r\n     <View style={styles.contentBody}>\r\n       <View style={styles.container}>\r\n         <View style={styles.textHead}>\r\n           <Text style={styles.heading}>Project Management</Text>\r\n-          <TouchableOpacity style={styles.addButton} onPress={OnAddProjectClick}>\r\n+          <TouchableOpacity style={styles.addButton} onPress={()=>setAddProjectList(true)}>\r\n             <Text style={styles.buttonText}>Add Project</Text>\r\n           </TouchableOpacity>\r\n         </View>\r\n         {(projectList || []).map((item, index) => {\r\n           return <ProjectBox projectData={item} key={index} />;\r\n         })}\r\n       </View>\r\n     </View>\r\n+    {addProjectModal ?addProjectModal:null}\r\n+    </>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n@@ -70,72 +70,4 @@\n   },\r\n });\r\n \r\n export default Task;\r\n-import React, { useState, useEffect } from \"react\";\r\n-import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n-import { GetTaskApi, GetProjectsApi } from \"./Api/api\";\r\n-import ProjectBox from \"./projectBox\";\r\n-const Task = () => {\r\n-  const [projectList, setProjectList] = useState([]);\r\n-  /*Function to get the task list */\r\n-  const GetProjectList = async () => {\r\n-    try {\r\n-      let projectRes = await GetProjectsApi();\r\n-      setProjectList(projectRes.projects);\r\n-    } catch (err) {\r\n-      console.log(err);\r\n-    }\r\n-  };\r\n-  /*Render function */\r\n-  useEffect(() => {\r\n-    GetProjectList();\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <View style={styles.contentBody}>\r\n-      <View style={styles.container}>\r\n-        <View style={styles.textHead}>\r\n-          <Text style={styles.heading}>Project Management</Text>\r\n-          <TouchableOpacity style={styles.addButton}>\r\n-            <Text style={styles.buttonText}>Add Project</Text>\r\n-          </TouchableOpacity>\r\n-        </View>\r\n-        {(projectList || []).map((item, index) => {\r\n-          return <ProjectBox projectData={item} key={index} />;\r\n-        })}\r\n-      </View>\r\n-    </View>\r\n-  );\r\n-};\r\n-\r\n-const styles = StyleSheet.create({\r\n-  contentBody: {\r\n-    flex: 1,\r\n-    padding: 10,\r\n-  },\r\n-  container: {\r\n-    flex: 1,\r\n-  },\r\n-  textHead: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    marginBottom: 15,\r\n-  },\r\n-  heading: {\r\n-    fontSize: 20,\r\n-    fontWeight: \"bold\",\r\n-    flex: 1,\r\n-  },\r\n-  addButton: {\r\n-    backgroundColor: \"#e45e38\",\r\n-    paddingVertical: 10,\r\n-    paddingHorizontal: 15,\r\n-    borderRadius: 8,\r\n-  },\r\n-  buttonText: {\r\n-    color: \"white\",\r\n-    fontSize: 16,\r\n-  },\r\n-});\r\n-\r\n-export default Task;\r\n"
                },
                {
                    "date": 1693306500644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n import { GetProjectsApi } from \"./Api/api\";\r\n import ProjectBox from \"./projectBox\";\r\n-const Task = () => {\r\n+const Project = () => {\r\n   const [projectList, setProjectList] = useState([]);\r\n   const [addProjectModal, setAddProjectList] = useState(false);\r\n-  /*Function to get the task list */\r\n+  /*Function to get the Project list */\r\n   const GetProjectList = async () => {\r\n     try {\r\n       let projectRes = await GetProjectsApi();\r\n       setProjectList(projectRes.projects);\r\n@@ -69,5 +69,5 @@\n     fontSize: 16,\r\n   },\r\n });\r\n \r\n-export default Task;\r\n+export default Project;\r\n"
                },
                {
                    "date": 1693310259205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from \"react\";\r\n import { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\n import { GetProjectsApi } from \"./Api/api\";\r\n+import { Flex } from \"@react-native-material/core\";\r\n import ProjectBox from \"./projectBox\";\r\n const Project = () => {\r\n   const [projectList, setProjectList] = useState([]);\r\n   const [addProjectModal, setAddProjectList] = useState(false);\r\n@@ -20,9 +21,9 @@\n   }, []);\r\n \r\n  \r\n   return (\r\n-    <>\r\n+    <Flex style={styles.scrollContainer}>\r\n     <View style={styles.contentBody}>\r\n       <View style={styles.container}>\r\n         <View style={styles.textHead}>\r\n           <Text style={styles.heading}>Project Management</Text>\r\n@@ -35,13 +36,24 @@\n         })}\r\n       </View>\r\n     </View>\r\n     {addProjectModal ?addProjectModal:null}\r\n-    </>\r\n+    </Flex>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n+  scrollContainer:{\r\n+    width: \"100%\",\r\n+  flexDirection: \"row\",\r\n+  alignItems: \"flex-start\",\r\n+  justifyContent: \"space-between\",\r\n+  gap: \"10px\",\r\n+  height: \"calc(100vh - 128px)\",\r\n+  padding: \"10px\",\r\n+  flexWrap: \"wrap\",\r\n+  overflow: \"scroll\",\r\n+  marginTop: \"64px\",},\r\n   contentBody: {\r\n     flex: 1,\r\n     padding: 10,\r\n   },\r\n"
                },
                {
                    "date": 1693310289264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,41 +19,44 @@\n   useEffect(() => {\r\n     GetProjectList();\r\n   }, []);\r\n \r\n- \r\n   return (\r\n     <Flex style={styles.scrollContainer}>\r\n-    <View style={styles.contentBody}>\r\n-      <View style={styles.container}>\r\n-        <View style={styles.textHead}>\r\n-          <Text style={styles.heading}>Project Management</Text>\r\n-          <TouchableOpacity style={styles.addButton} onPress={()=>setAddProjectList(true)}>\r\n-            <Text style={styles.buttonText}>Add Project</Text>\r\n-          </TouchableOpacity>\r\n+      <View style={styles.contentBody}>\r\n+        <View style={styles.container}>\r\n+          <View style={styles.textHead}>\r\n+            <Text style={styles.heading}>Project Management</Text>\r\n+            <TouchableOpacity\r\n+              style={styles.addButton}\r\n+              onPress={() => setAddProjectList(true)}\r\n+            >\r\n+              <Text style={styles.buttonText}>Add Project</Text>\r\n+            </TouchableOpacity>\r\n+          </View>\r\n+          {(projectList || []).map((item, index) => {\r\n+            return <ProjectBox projectData={item} key={index} />;\r\n+          })}\r\n         </View>\r\n-        {(projectList || []).map((item, index) => {\r\n-          return <ProjectBox projectData={item} key={index} />;\r\n-        })}\r\n       </View>\r\n-    </View>\r\n-    {addProjectModal ?addProjectModal:null}\r\n+      {addProjectModal ? addProjectModal : null}\r\n     </Flex>\r\n   );\r\n };\r\n \r\n const styles = StyleSheet.create({\r\n-  scrollContainer:{\r\n+  scrollContainer: {\r\n     width: \"100%\",\r\n-  flexDirection: \"row\",\r\n-  alignItems: \"flex-start\",\r\n-  justifyContent: \"space-between\",\r\n-  gap: \"10px\",\r\n-  height: \"calc(100vh - 128px)\",\r\n-  padding: \"10px\",\r\n-  flexWrap: \"wrap\",\r\n-  overflow: \"scroll\",\r\n-  marginTop: \"64px\",},\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"flex-start\",\r\n+    justifyContent: \"space-between\",\r\n+    // gap: \"10px\",\r\n+    height: \"calc(100vh - 128px)\",\r\n+    padding: \"10px\",\r\n+    flexWrap: \"wrap\",\r\n+    overflow: \"scroll\",\r\n+    marginTop: \"64px\",\r\n+  },\r\n   contentBody: {\r\n     flex: 1,\r\n     padding: 10,\r\n   },\r\n"
                },
                {
                    "date": 1693310395140,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n     height: \"calc(100vh - 128px)\",\r\n     padding: \"10px\",\r\n     flexWrap: \"wrap\",\r\n     overflow: \"scroll\",\r\n-    marginTop: \"64px\",\r\n+    // marginTop: \"64px\",\r\n   },\r\n   contentBody: {\r\n     flex: 1,\r\n     padding: 10,\r\n"
                },
                {
                    "date": 1693310405210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,8 @@\n     height: \"calc(100vh - 128px)\",\r\n     padding: \"10px\",\r\n     flexWrap: \"wrap\",\r\n     overflow: \"scroll\",\r\n-    // marginTop: \"64px\",\r\n   },\r\n   contentBody: {\r\n     flex: 1,\r\n     padding: 10,\r\n"
                }
            ],
            "date": 1693303300563,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { GetTaskApi ,GetProjectsApi } from \"./Api/api\";\r\nimport ProjectBox from \"./projectBox\";\r\nconst Task = () => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [projectList, setProjectList] = useState([]);\r\n  /*Function to get the task list */\r\n  const GetTaskList = async () => {\r\n    try {\r\n      let response = await GetTaskApi();\r\n      let projectRes =await GetProjectsApi()\r\n      setTaskList(response.tasks);\r\n      console.log(projectRes.projects)\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  /*Render function */\r\n  useEffect(() => {\r\n    GetTaskList();\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.contentBody}>\r\n      <View style={styles.container}>\r\n        <View style={styles.textHead}>\r\n          <Text style={styles.heading}>Task Management</Text>\r\n          <TouchableOpacity style={styles.addButton}>\r\n            <Text style={styles.buttonText}>Add New Task</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        {(projectRes.projects || []).map((item,index) => {\r\n          return <ProjectBox projectData={item} taskData={taskList} key={index}/>;\r\n        })}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  contentBody: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  textHead: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 15,\r\n  },\r\n  heading: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    flex: 1,\r\n  },\r\n  addButton: {\r\n    backgroundColor: \"#e45e38\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 8,\r\n  },\r\n  buttonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Task;\r\n"
        }
    ]
}